<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>Heap[T] -  Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul><li>
          <a href="../Nemerle/index.htm">Nemerle</a>
      </li><li>
          <a href="../Nemerle.Builtins/index.htm">Nemerle.Builtins</a>
      </li><li>
          <a href="../Nemerle.Collections/index.htm" class="current">Nemerle.Collections</a>
      </li><li>
          <a href="../Nemerle.Compiler/index.htm">Nemerle.Compiler</a>
      </li><li>
          <a href="../Nemerle.Concurrency/index.htm">Nemerle.Concurrency</a>
      </li><li>
          <a href="../Nemerle.Core/index.htm">Nemerle.Core</a>
      </li><li>
          <a href="../Nemerle.Diagnostics/index.htm">Nemerle.Diagnostics</a>
      </li><li>
          <a href="../Nemerle.Extensions/index.htm">Nemerle.Extensions</a>
      </li><li>
          <a href="../Nemerle.Hacks/index.htm">Nemerle.Hacks</a>
      </li><li>
          <a href="../Nemerle.Internal/index.htm">Nemerle.Internal</a>
      </li><li>
          <a href="../Nemerle.IO/index.htm">Nemerle.IO</a>
      </li><li>
          <a href="../Nemerle.Late/index.htm">Nemerle.Late</a>
      </li><li>
          <a href="../Nemerle.Utility/index.htm">Nemerle.Utility</a>
      </li><li>
          <a href="../StringTemplate/index.htm">StringTemplate</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in Nemerle.Collections</h2>
	<div class="scroll">
		<ul><li>
            <a href="../Nemerle.Collections/EmptyCollection.htm">EmptyCollection</a>
        </li><li>
            <a href="../Nemerle.Collections/EmptyHeap.htm">EmptyHeap</a>
        </li><li>
            <a href="../Nemerle.Collections/Hashtable`2.htm">Hashtable[TKey, TValue]</a>
        </li><li>
            <a href="../Nemerle.Collections/Heap`1.htm" class="current">Heap[T]</a>
        </li><li>
            <a href="../Nemerle.Collections/ICollection`1.htm">ICollection['a]</a>
        </li><li>
            <a href="../Nemerle.Collections/ICovariantEnumerable`1.htm">ICovariantEnumerable[T]</a>
        </li><li>
            <a href="../Nemerle.Collections/ICovariantEnumerator`1.htm">ICovariantEnumerator[T]</a>
        </li><li>
            <a href="../Nemerle.Collections/ICovariantList`1.htm">ICovariantList[T]</a>
        </li><li>
            <a href="../Nemerle.Collections/LinkedList`1.htm">LinkedList['a]</a>
        </li><li>
            <a href="../Nemerle.Collections/ListEnumerator`1.htm">ListEnumerator[T]</a>
        </li><li>
            <a href="../Nemerle.Collections/Map`2.htm">Map[TKey, TValue]</a>
        </li><li>
            <a href="../Nemerle.Collections/NCollectionsExtensions.htm">NCollectionsExtensions</a>
        </li><li>
            <a href="../Nemerle.Collections/Nil.htm">Nil</a>
        </li><li>
            <a href="../Nemerle.Collections/NList.htm">NList</a>
        </li><li>
            <a href="../Nemerle.Collections/One.htm">One</a>
        </li><li>
            <a href="../Nemerle.Collections/Pair`1.htm">Pair['a]</a>
        </li><li>
            <a href="../Nemerle.Collections/Queue`1.htm">Queue['a]</a>
        </li><li>
            <a href="../Nemerle.Collections/RList`1.htm">RList['a]</a>
        </li><li>
            <a href="../Nemerle.Collections/Seq`1.htm">Seq[T]</a>
        </li><li>
            <a href="../Nemerle.Collections/Set`1.htm">Set[T]</a>
        </li><li>
            <a href="../Nemerle.Collections/Stack`1.htm">Stack['a]</a>
        </li><li>
            <a href="../Nemerle.Collections/Zero.htm">Zero</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> Heap[T]</p>
		<p><strong>Namespace</strong> Nemerle.Collections</p><p><strong>Interfaces</strong> <span title="System.Collections.Generic.ICollection[T]">ICollection[T]</span></p>
	</div>
    <div class="sub-header">
			<div id="summary"><p>General usage heap, can be used as priority queue. </p> 
			</div>


			<h3 class="section">Methods</h3>
			<ul><li><a href="../Nemerle.Collections/Heap`1.htm#Add">Add</a></li><li><a href="../Nemerle.Collections/Heap`1.htm#CopyTo">CopyTo</a></li><li><a href="../Nemerle.Collections/Heap`1.htm#ExtractFirst">ExtractFirst</a></li><li><a href="../Nemerle.Collections/Heap`1.htm#Fold``1">Fold.['b]</a></li><li><a href="../Nemerle.Collections/Heap`1.htm#Insert">Insert</a></li><li><a href="../Nemerle.Collections/Heap`1.htm#Iter">Iter</a></li><li><a href="../Nemerle.Collections/Heap`1.htm#Map``1">Map.['b]</a></li><li><a href="../Nemerle.Collections/Heap`1.htm#Top">Top</a></li>
			</ul>

			<h3 class="section">Properties</h3>
			<ul><li><a href="../Nemerle.Collections/Heap`1.htm#Capacity">Capacity</a></li><li><a href="../Nemerle.Collections/Heap`1.htm#Count">Count</a></li><li><a href="../Nemerle.Collections/Heap`1.htm#CurrentCapacity">CurrentCapacity</a></li><li><a href="../Nemerle.Collections/Heap`1.htm#IsEmpty">IsEmpty</a></li><li><a href="../Nemerle.Collections/Heap`1.htm#IsReadOnly">IsReadOnly</a></li>
			</ul>

	</div>


	<h3 class="section">Public instance methods</h3>
<div id="Add" class="method">
		<h4><strong>Add</strong>(x : <span title="Nemerle.Collections.T">T</span>) : <span title="System.void">void</span></h4>
		<div class="content">




    </div>
	</div><div id="CopyTo" class="method">
		<h4><strong>CopyTo</strong>(to : <span title="Nemerle.Collections.T[]">T[]</span>, startIdx : <span title="System.int">int</span>) : <span title="System.void">void</span></h4>
		<div class="content">




    </div>
	</div><div id="ExtractFirst" class="method">
		<h4><strong>ExtractFirst</strong>() : <span title="Nemerle.Collections.T">T</span></h4>
		<div class="content"><p>Returns the first (with maximal priority) element from the heap,
removing it. Throws EmptyHeap exception. </p> 




    </div>
	</div><div id="Fold``1" class="method">
		<h4><strong>Fold.['b]</strong>(f : <a href="../Nemerle.Builtins/Function`3.htm">Function['p1, 'p2, 'r]</a>, x : <span title="Nemerle.Collections.'b">'b</span>) : <span title="Nemerle.Collections.'b">'b</span></h4>
		<div class="content"><p>Folds this heap's elements using the specified function
and an initial value. </p> 




    </div>
	</div><div id="Insert" class="method">
		<h4><strong>Insert</strong>(x : <span title="Nemerle.Collections.T">T</span>) : <span title="System.void">void</span></h4>
		<div class="content">




    </div>
	</div><div id="Iter" class="method">
		<h4><strong>Iter</strong>(f : <a href="../Nemerle.Builtins/FunctionVoid`1.htm">FunctionVoid['p1]</a>) : <span title="System.void">void</span></h4>
		<div class="content"><p>Calls the specified function for all elements of this heap. </p> 




    </div>
	</div><div id="Map``1" class="method">
		<h4><strong>Map.['b]</strong>(f : <a href="../Nemerle.Builtins/Function`2.htm">Function['p1, 'r]</a>) : <a href="../Nemerle.Collections/Heap`1.htm">Heap[T]</a></h4>
		<div class="content"><p>Creates new heap of elements of type 'b. New heap is totally independent, i.e.
any changes in original heap do not influence the second one and vice versa. </p> 




    </div>
	</div><div id="Top" class="method">
		<h4><strong>Top</strong>() : <span title="Nemerle.Collections.T">T</span></h4>
		<div class="content"><p>Returns the first (with maximal priority) element from the heap
without removing it. Throws EmptyHeap exception. </p> 




    </div>
	</div>


  <h3 class="section">Public properties</h3>
<div id="Capacity" class="method">
    <h4><strong>Capacity : <span title="System.int">int</span></strong>get;</h4>
    <div class="content"><p>Returns the number of elements that this heap can store
without the need to grow. </p> 

    </div>
  </div><div id="Count" class="method">
    <h4><strong>Count : <span title="System.int">int</span></strong>get;</h4>
    <div class="content"><p>Returns number of elements in the heap. </p> 

    </div>
  </div><div id="CurrentCapacity" class="method">
    <h4><strong>CurrentCapacity : <span title="System.int">int</span></strong>get;</h4>
    <div class="content"><p>Returns the number of elements that this heap can store
without the need to grow. </p> 

    </div>
  </div><div id="IsEmpty" class="method">
    <h4><strong>IsEmpty : <span title="System.bool">bool</span></strong>get;</h4>
    <div class="content"><p>Checks if the heap is empty. </p> 

    </div>
  </div><div id="IsReadOnly" class="method">
    <h4><strong>IsReadOnly : <span title="System.bool">bool</span></strong>get;</h4>
    <div class="content"><p>Returns false. </p> 

    </div>
  </div>
<div id="footer">
  <p>Based on v1.0.0.9832 of </p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>