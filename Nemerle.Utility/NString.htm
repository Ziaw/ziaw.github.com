<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>NString -  Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul><li>
          <a href="../Nemerle/index.htm">Nemerle</a>
      </li><li>
          <a href="../Nemerle.Builtins/index.htm">Nemerle.Builtins</a>
      </li><li>
          <a href="../Nemerle.Collections/index.htm">Nemerle.Collections</a>
      </li><li>
          <a href="../Nemerle.Compiler/index.htm">Nemerle.Compiler</a>
      </li><li>
          <a href="../Nemerle.Concurrency/index.htm">Nemerle.Concurrency</a>
      </li><li>
          <a href="../Nemerle.Core/index.htm">Nemerle.Core</a>
      </li><li>
          <a href="../Nemerle.Diagnostics/index.htm">Nemerle.Diagnostics</a>
      </li><li>
          <a href="../Nemerle.Extensions/index.htm">Nemerle.Extensions</a>
      </li><li>
          <a href="../Nemerle.Hacks/index.htm">Nemerle.Hacks</a>
      </li><li>
          <a href="../Nemerle.Internal/index.htm">Nemerle.Internal</a>
      </li><li>
          <a href="../Nemerle.IO/index.htm">Nemerle.IO</a>
      </li><li>
          <a href="../Nemerle.Late/index.htm">Nemerle.Late</a>
      </li><li>
          <a href="../Nemerle.Utility/index.htm" class="current">Nemerle.Utility</a>
      </li><li>
          <a href="../StringTemplate/index.htm">StringTemplate</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in Nemerle.Utility</h2>
	<div class="scroll">
		<ul><li>
            <a href="../Nemerle.Utility/Boolean.htm">Boolean</a>
        </li><li>
            <a href="../Nemerle.Utility/CliOption.htm">CliOption</a>
        </li><li>
            <a href="../Nemerle.Utility/Flag.htm">Flag</a>
        </li><li>
            <a href="../Nemerle.Utility/Getopt.htm">Getopt</a>
        </li><li>
            <a href="../Nemerle.Utility/Identity`2.htm">Identity['a, 'b]</a>
        </li><li>
            <a href="../Nemerle.Utility/Int.htm">Int</a>
        </li><li>
            <a href="../Nemerle.Utility/ListComprehensionHelper.htm">ListComprehensionHelper</a>
        </li><li>
            <a href="../Nemerle.Utility/NonOption.htm">NonOption</a>
        </li><li>
            <a href="../Nemerle.Utility/NString.htm" class="current">NString</a>
        </li><li>
            <a href="../Nemerle.Utility/NStringBuilder.htm">NStringBuilder</a>
        </li><li>
            <a href="../Nemerle.Utility/NStringBuilderExtensions.htm">NStringBuilderExtensions</a>
        </li><li>
            <a href="../Nemerle.Utility/Pair.htm">Pair</a>
        </li><li>
            <a href="../Nemerle.Utility/PostHelp.htm">PostHelp</a>
        </li><li>
            <a href="../Nemerle.Utility/PreHelp.htm">PreHelp</a>
        </li><li>
            <a href="../Nemerle.Utility/String.htm">String</a>
        </li><li>
            <a href="../Nemerle.Utility/SubstitutionString.htm">SubstitutionString</a>
        </li><li>
            <a href="../Nemerle.Utility/Unhandled.htm">Unhandled</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> NString</p>
		<p><strong>Namespace</strong> Nemerle.Utility</p>
	</div>
    <div class="sub-header">


			<h3 class="section">Methods</h3>
			<ul><li><a href="../Nemerle.Utility/NString.htm#Concat">Concat</a></li><li><a href="../Nemerle.Utility/NString.htm#EndsWith">EndsWith</a></li><li><a href="../Nemerle.Utility/NString.htm#EndsWith">EndsWith</a></li><li><a href="../Nemerle.Utility/NString.htm#EndsWith">EndsWith</a></li><li><a href="../Nemerle.Utility/NString.htm#EndsWith">EndsWith</a></li><li><a href="../Nemerle.Utility/NString.htm#Exists">Exists</a></li><li><a href="../Nemerle.Utility/NString.htm#Explode">Explode</a></li><li><a href="../Nemerle.Utility/NString.htm#Fold``1">Fold.['a]</a></li><li><a href="../Nemerle.Utility/NString.htm#Fold2``1">Fold2.['a]</a></li><li><a href="../Nemerle.Utility/NString.htm#ForAll">ForAll</a></li><li><a href="../Nemerle.Utility/NString.htm#Implode">Implode</a></li><li><a href="../Nemerle.Utility/NString.htm#Iter">Iter</a></li><li><a href="../Nemerle.Utility/NString.htm#IterI">IterI</a></li><li><a href="../Nemerle.Utility/NString.htm#Map">Map</a></li><li><a href="../Nemerle.Utility/NString.htm#MapCS">MapCS</a></li><li><a href="../Nemerle.Utility/NString.htm#SeparatedCalls``1">SeparatedCalls.['a]</a></li><li><a href="../Nemerle.Utility/NString.htm#Split">Split</a></li><li><a href="../Nemerle.Utility/NString.htm#Split">Split</a></li><li><a href="../Nemerle.Utility/NString.htm#SplitToList">SplitToList</a></li><li><a href="../Nemerle.Utility/NString.htm#StartsWith">StartsWith</a></li><li><a href="../Nemerle.Utility/NString.htm#StartsWith">StartsWith</a></li><li><a href="../Nemerle.Utility/NString.htm#StartsWith">StartsWith</a></li>
			</ul>


	</div>



	<h3 class="section">Public static methods</h3>
<div id="Concat" class="method">
		<h4><strong>Concat</strong>(sep : <span title="System.string">string</span>, l : <a href="../Nemerle.Core/list`1.htm">list[T]</a>) : <span title="System.string">string</span></h4>
		<div class="content"><p>Concatenates strings from the list, inserting given
separator between them. </p> 




    </div>
	</div><div id="EndsWith" class="method">
		<h4><strong>EndsWith</strong>(str : <span title="System.string">string</span>, comparisonType : <span title="System.StringComparison">StringComparison</span>, values : <span title="System.String[]">String[]</span>) : <span title="System.bool">bool</span></h4>
		<div class="content">




    </div>
	</div><div id="EndsWith" class="method">
		<h4><strong>EndsWith</strong>(str : <span title="System.string">string</span>, value : <span title="System.Char">Char</span>) : <span title="System.bool">bool</span></h4>
		<div class="content">




    </div>
	</div><div id="EndsWith" class="method">
		<h4><strong>EndsWith</strong>(str : <span title="System.string">string</span>, values : <span title="System.String[]">String[]</span>) : <span title="System.bool">bool</span></h4>
		<div class="content">




    </div>
	</div><div id="EndsWith" class="method">
		<h4><strong>EndsWith</strong>(str : <span title="System.string">string</span>, beforeEnd : <span title="System.Char">Char</span>, end : <span title="System.Char">Char</span>) : <span title="System.bool">bool</span></h4>
		<div class="content">




    </div>
	</div><div id="Exists" class="method">
		<h4><strong>Exists</strong>(s : <span title="System.string">string</span>, f : <a href="../Nemerle.Builtins/Function`2.htm">Function['p1, 'r]</a>) : <span title="System.bool">bool</span></h4>
		<div class="content"><p>Return [true] if [f] is returns [true] for any of the characters
in the string [s]. </p> 




    </div>
	</div><div id="Explode" class="method">
		<h4><strong>Explode</strong>(s : <span title="System.string">string</span>) : <a href="../Nemerle.Core/list`1.htm">list[T]</a></h4>
		<div class="content"><p>Changes string into a corresponding list of characters. </p> <blockquote class="remarks">
  <p>Warning: this should not be used in performance critical parts of
the program, because of list's memory overheads. </p> 
</blockquote>




    </div>
	</div><div id="Fold``1" class="method">
		<h4><strong>Fold.['a]</strong>(s : <span title="System.string">string</span>, ini : <span title="Nemerle.Utility.'a">'a</span>, f : <a href="../Nemerle.Builtins/Function`3.htm">Function['p1, 'p2, 'r]</a>) : <span title="Nemerle.Utility.'a">'a</span></h4>
		<div class="content">




    </div>
	</div><div id="Fold2``1" class="method">
		<h4><strong>Fold2.['a]</strong>(s1 : <span title="System.string">string</span>, s2 : <span title="System.string">string</span>, ini : <span title="Nemerle.Utility.'a">'a</span>, f : <a href="../Nemerle.Builtins/Function`4.htm">Function['p1, 'p2, 'p3, 'r]</a>) : <span title="Nemerle.Utility.'a">'a</span></h4>
		<div class="content">




    </div>
	</div><div id="ForAll" class="method">
		<h4><strong>ForAll</strong>(s : <span title="System.string">string</span>, f : <a href="../Nemerle.Builtins/Function`2.htm">Function['p1, 'r]</a>) : <span title="System.bool">bool</span></h4>
		<div class="content"><p>Return [true] if [f] is returns [true] for all of the characters
in the string [s]. </p> 




    </div>
	</div><div id="Implode" class="method">
		<h4><strong>Implode</strong>(s : <a href="../Nemerle.Core/list`1.htm">list[T]</a>) : <span title="System.string">string</span></h4>
		<div class="content"><p>Constructs a string out of a list of characters. </p> <blockquote class="remarks">
  <p>Warning: this should not be used in performance critical parts of
the program, because of list's memory overheads. </p> 
</blockquote>




    </div>
	</div><div id="Iter" class="method">
		<h4><strong>Iter</strong>(s : <span title="System.string">string</span>, f : <a href="../Nemerle.Builtins/FunctionVoid`1.htm">FunctionVoid['p1]</a>) : <span title="System.void">void</span></h4>
		<div class="content"><p>Call [f] for all characters in [s] in turn. </p> 




    </div>
	</div><div id="IterI" class="method">
		<h4><strong>IterI</strong>(s : <span title="System.string">string</span>, f : <a href="../Nemerle.Builtins/FunctionVoid`2.htm">FunctionVoid['p1, 'p2]</a>) : <span title="System.void">void</span></h4>
		<div class="content"><p>Call [f] for all characters in [s] in turn, passing the current
index as the additional paramter. </p> 




    </div>
	</div><div id="Map" class="method">
		<h4><strong>Map</strong>(s : <span title="System.string">string</span>, f : <a href="../Nemerle.Builtins/Function`2.htm">Function['p1, 'r]</a>) : <span title="System.string">string</span></h4>
		<div class="content"><p>Same as [Implode (NList.Map (Explode (s), f))] but a lot faster. </p> 




    </div>
	</div><div id="MapCS" class="method">
		<h4><strong>MapCS</strong>(s : <span title="System.string">string</span>, f : <a href="../Nemerle.Builtins/Function`2.htm">Function['p1, 'r]</a>) : <span title="System.string">string</span></h4>
		<div class="content"><p>Same as [Concat ("", NList.Map (Explode (s), f))] but a lot faster. </p> 




    </div>
	</div><div id="SeparatedCalls``1" class="method">
		<h4><strong>SeparatedCalls.['a]</strong>(sep : <span title="System.string">string</span>, l : <a href="../Nemerle.Core/list`1.htm">list[T]</a>, f : <a href="../Nemerle.Builtins/FunctionVoid`1.htm">FunctionVoid['p1]</a>, acc : <span title="System.Text.StringBuilder">StringBuilder</span>) : <span title="System.void">void</span></h4>
		<div class="content"><p>Calls the given function on elements of given list, appending
given separator to string builder between those calls. </p> <blockquote class="remarks">
  <p>NOTE: the `f' function should be taking `acc' as a parameter,
so that this function looks more Fold-like. </p> 
</blockquote>




    </div>
	</div><div id="Split" class="method">
		<h4><strong>Split</strong>(str : <span title="System.string">string</span>, seperators : <span title="System.Char[]">Char[]</span>) : <a href="../Nemerle.Core/list`1.htm">list[T]</a></h4>
		<div class="content"><p>Splits the string at positions of occurrence of one
of the characters from the given array. </p> 




    </div>
	</div><div id="Split" class="method">
		<h4><strong>Split</strong>(str : <span title="System.string">string</span>, sep : <a href="../Nemerle.Core/list`1.htm">list[T]</a>) : <a href="../Nemerle.Core/list`1.htm">list[T]</a></h4>
		<div class="content"><p>Splits the string at positions of occurrence of one
of the characters from the given list. </p> 




    </div>
	</div><div id="SplitToList" class="method">
		<h4><strong>SplitToList</strong>(str : <span title="System.string">string</span>, seperators : <span title="System.Char[]">Char[]</span>) : <a href="../Nemerle.Core/list`1.htm">list[T]</a></h4>
		<div class="content">




    </div>
	</div><div id="StartsWith" class="method">
		<h4><strong>StartsWith</strong>(str : <span title="System.string">string</span>, first : <span title="System.Char">Char</span>, second : <span title="System.Char">Char</span>) : <span title="System.bool">bool</span></h4>
		<div class="content">




    </div>
	</div><div id="StartsWith" class="method">
		<h4><strong>StartsWith</strong>(str : <span title="System.string">string</span>, values : <span title="System.String[]">String[]</span>) : <span title="System.bool">bool</span></h4>
		<div class="content">




    </div>
	</div><div id="StartsWith" class="method">
		<h4><strong>StartsWith</strong>(str : <span title="System.string">string</span>, comparisonType : <span title="System.StringComparison">StringComparison</span>, values : <span title="System.String[]">String[]</span>) : <span title="System.bool">bool</span></h4>
		<div class="content">




    </div>
	</div>

<div id="footer">
  <p>Based on v1.0.0.9832 of </p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>